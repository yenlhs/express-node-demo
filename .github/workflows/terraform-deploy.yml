name: Terraform Infrastructure Deployment

on:
  push:
    branches: [main, master]
    paths:
      - "terraform/**"
      - ".github/workflows/terraform-deploy.yml"
  pull_request:
    branches: [main, master]
    paths:
      - "terraform/**"
      - ".github/workflows/terraform-deploy.yml"

env:
  AWS_REGION: ap-southeast-2
  TF_VERSION: "1.5.0"

jobs:
  terraform:
    name: Terraform Infrastructure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Format Check
        working-directory: ./terraform
        run: terraform fmt -check -recursive

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -out=tfplan
        env:
          TF_VAR_aws_region: ${{ env.AWS_REGION }}

      - name: Terraform Apply
        if: github.event_name == 'push'
        working-directory: ./terraform
        run: terraform apply -auto-approve tfplan
        env:
          TF_VAR_aws_region: ${{ env.AWS_REGION }}

      - name: Show Terraform Outputs
        if: github.event_name == 'push'
        working-directory: ./terraform
        run: |
          echo "=== Terraform Deployment Complete ==="
          echo "Load Balancer URL: $(terraform output -raw load_balancer_url)"
          echo "ECS Cluster: $(terraform output -raw ecs_cluster_name)"
          echo "ECS Service: $(terraform output -raw ecs_service_name)"
          echo "ECR Repository: $(terraform output -raw ecr_repository_url)"

      - name: Comment PR with Plan
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync('terraform/tfplan', 'utf8');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Terraform Plan ðŸ“‹
              
              \`\`\`hcl
              ${plan}
              \`\`\`
              
              This plan will be applied when the PR is merged.`
            });
