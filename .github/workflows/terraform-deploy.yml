name: Terraform Infrastructure Deployment

on:
  push:
    branches: [main, master]
    paths:
      - "terraform/**"
      - ".github/workflows/terraform-deploy.yml"
  pull_request:
    branches: [main, master]
    paths:
      - "terraform/**"
      - ".github/workflows/terraform-deploy.yml"

env:
  AWS_REGION: ap-southeast-2
  TF_VERSION: "1.5.0"

jobs:
  terraform:
    name: Terraform Infrastructure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Format Check
        working-directory: ./terraform
        run: terraform fmt -check -recursive

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -out=tfplan
        env:
          TF_VAR_aws_region: ${{ env.AWS_REGION }}

      - name: Terraform Apply
        if: github.event_name == 'push'
        working-directory: ./terraform
        run: terraform apply -auto-approve tfplan

      - name: Update ECS Service to 2 Containers
        if: github.event_name == 'push'
        run: |
          echo "Updating ECS service to run 2 containers..."
          aws ecs update-service \
            --cluster express-node-demo-cluster \
            --service express-node-demo-service \
            --desired-count 2 \
            --region ap-southeast-2

          echo "Waiting for service to stabilize..."
          aws ecs wait services-stable \
            --cluster express-node-demo-cluster \
            --services express-node-demo-service \
            --region ap-southeast-2

          echo "âœ… ECS service updated to 2 containers"

      - name: Show Deployment Status
        if: github.event_name == 'push'
        run: |
          echo "=== ECS Service Update Complete ==="
          LB_DNS=$(aws elbv2 describe-load-balancers --names express-node-demo-alb --query 'LoadBalancers[0].DNSName' --output text)
          echo "Load Balancer URL: https://$LB_DNS"
          echo "ECS Cluster: express-node-demo-cluster"
          echo "ECS Service: express-node-demo-service"
          echo "ECR Repository: 189864887312.dkr.ecr.ap-southeast-2.amazonaws.com/express-node-demo"

          # Show current service status
          echo ""
          echo "Current ECS Service Status:"
          aws ecs describe-services \
            --cluster express-node-demo-cluster \
            --services express-node-demo-service \
            --query 'services[0].{DesiredCount:desiredCount,RunningCount:runningCount,PendingCount:pendingCount}' \
            --output table

      - name: Comment PR with Plan
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync('terraform/tfplan', 'utf8');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Terraform Plan ðŸ“‹
              
              \`\`\`hcl
              ${plan}
              \`\`\`
              
              This plan will be applied when the PR is merged.`
            });
